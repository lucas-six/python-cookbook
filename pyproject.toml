[project]
name = "python-cookbook"
description = "Recipes for Python. Hands-on code examples and snippets for daily work."
authors = [{ name = "Li Yun", email = "lucassix.lee@gmail.com" }]
readme = "README.md"
requires-python = "~=3.12"
license-files = ["LICEN[CS]E*"]
maintainers = [{ name = "Li Yun", email = "lucassix.lee@gmail.com" }]
keywords = ["cookbook", "recipe", "fastapi", "mongodb"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",

    "Intended Audience :: Developers",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",

    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
dependencies = [
    "pydantic",
    "fastapi[all]",
    "uvicorn[standard]",
    #"python-jose[cryptography]",
    #"types-python-jose",
    "motor",
    #"beanie",
    #"pyodmongo",
    "redis[hiredis]",
    "types-redis",
    "aiomqtt",
    "celery[librabbitmq, mongodb, redis]",
    #"requests",
    #"types-requests",
]
dynamic = ["version"]

[project.urls]
Home = "https://lucas-six.github.io/python-cookbook/"
Documentation = "https://lucas-six.github.io/python-cookbook/"
Repository = "https://github.com/lucas-six/python-cookbook/"

[tool.setuptools]
py-modules = ['cookbook', 'examples']

[[tool.uv.index]]
url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"
default = true

[dependency-groups]
dev = ["mypy>=1.15.0", "ruff>=0.11.8"]

[tool.ruff]
line-length = 100
lint.extend-safe-fixes = [
    # non-pep585-annotation
    "UP006",
]
lint.select = [
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # pycodestyle
    "E",
    # Pyflakes errors
    "F",
    # isort
    "I",
    # flake8-simplify
    "SIM",
    # flake8-tidy-imports
    "TID",
    # pyupgrade
    "UP",
    # Pyflakes warnings
    "W",
]
lint.ignore = []

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]
exclude = []
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
disallow_any_generics = false
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[[tool.mypy.overrides]]
module = "motor.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "redis.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = []
addopts = [
    "--strict-markers",
    "--cov",
    "--cov-append",
    "--durations=5",
    "--durations-min=0.25",
]
norecursedirs = [".git", ".venv", ".*_cache", ".tox", "*.egg-info", "docs"]

[tool.coverage.run]
parallel = true

[tool.coverage.report]
skip_empty = true

[tool.pyright]
include = ["examples"]
exclude = [
    ".git",
    ".venv",
    ".tox",
    "**/__pycache__",
    "**/.mypy_cache",
    "**/.pytest_cache",
]
reportGeneralTypeIssues = "none"
reportUnboundVariable = "none"
stubPath = ""
pythonVersion = "3.12"
